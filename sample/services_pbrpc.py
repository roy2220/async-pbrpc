# generated by protoc-gen-pbrpc. DO NOT EDIT!
# source: services.proto
import typing
from google.protobuf import message
import async_pbrpc
import async_pbrpc_pb2 as async_pbrpc_pb2_0
import services_pb2 as services_pb2_0
_MessageClass = typing.Union[typing.Type[message.Message], typing.Type[None]]
_CLIENT_REQUEST_CLASSES: typing.Tuple[_MessageClass, ...] = (
    type(None),
)
_CLIENT_RESPONSE_CLASSES: typing.Tuple[_MessageClass, ...] = (
    services_pb2_0.GetNameResponse,
)
class ClientServiceHandler(async_pbrpc.ServiceHandler):
    SERVICE_NAME: typing.ClassVar[bytes] = b"CLIENT"
    METHOD_NAMES: typing.ClassVar[typing.Tuple[str, ...]] = (
        "get_name",
    )
    REQUEST_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _CLIENT_REQUEST_CLASSES
    RESPONSE_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _CLIENT_RESPONSE_CLASSES
    @staticmethod
    def get_name(channel) -> services_pb2_0.GetNameResponse:
        raise async_pbrpc.NotImplementedError()
class ClientServiceClient(async_pbrpc.ServiceClient):
    SERVICE_NAME: typing.ClassVar[bytes] = b"CLIENT"
    REQUEST_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _CLIENT_REQUEST_CLASSES
    RESPONSE_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _CLIENT_RESPONSE_CLASSES
    def get_name(self, *, auto_retry=False) -> typing.Coroutine[typing.Any, typing.Any, services_pb2_0.GetNameResponse]:
        return self.call_method(0, None, auto_retry)  # type: ignore
_SERVER_REQUEST_CLASSES: typing.Tuple[_MessageClass, ...] = (
    services_pb2_0.SayHelloRequest,
)
_SERVER_RESPONSE_CLASSES: typing.Tuple[_MessageClass, ...] = (
    services_pb2_0.SayHelloResponse,
)
class ServerServiceHandler(async_pbrpc.ServiceHandler):
    SERVICE_NAME: typing.ClassVar[bytes] = b"SERVER"
    METHOD_NAMES: typing.ClassVar[typing.Tuple[str, ...]] = (
        "say_hello",
    )
    REQUEST_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _SERVER_REQUEST_CLASSES
    RESPONSE_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _SERVER_RESPONSE_CLASSES
    @staticmethod
    def say_hello(channel, request: services_pb2_0.SayHelloRequest) -> services_pb2_0.SayHelloResponse:
        raise async_pbrpc.NotImplementedError()
class ServerServiceClient(async_pbrpc.ServiceClient):
    SERVICE_NAME: typing.ClassVar[bytes] = b"SERVER"
    REQUEST_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _SERVER_REQUEST_CLASSES
    RESPONSE_CLASSES: typing.ClassVar[typing.Tuple[_MessageClass, ...]] = _SERVER_RESPONSE_CLASSES
    def say_hello(self, request: services_pb2_0.SayHelloRequest, *, auto_retry=False) -> typing.Coroutine[typing.Any, typing.Any, services_pb2_0.SayHelloResponse]:
        return self.call_method(0, request, auto_retry)  # type: ignore
